@using Orchard.Search.ViewModels
@model Orchard.Search.ViewModels.SearchSettingsViewModel
@{
    Script.Require("jQuery");
    
}
<fieldset>
    <legend>@T("Search")</legend>
    <div>
        <label>@T("Indexes")</label>
        
        @if (Model.Entries != null && Model.Entries.Any()) {
            if (String.IsNullOrWhiteSpace(Model.SelectedIndex)) {
                Model.Entries.Insert(0, new IndexSettingsEntry { Index = "" });
            }

        <select id="selectIndex" name="@Html.NameFor(m => m.SelectedIndex)">
            @foreach (var modelEntry in Model.Entries) {
            @Html.SelectOption(Model.SelectedIndex, modelEntry.Index, modelEntry.Index)
            }
        </select>
        @Html.Hint(T("Select which index to use in search queries."))

        <label>@T("Fields")</label>
            <ul>
                @{var entryIndex = 0;}
                @foreach(var modelEntry in Model.Entries) {
                    @Html.HiddenFor(m => m.Entries[entryIndex].Index)
                    <li data-index="@modelEntry.Index">
                        @if (modelEntry.Fields != null && modelEntry.Fields.Any()) {
                            <ul>
                                @{ var fieldIndex = 0;}
                                @foreach (var fieldEntry in Model.Entries[entryIndex].Fields) {
                                    <li>
                                        @Html.EditorFor(m => m.Entries[entryIndex].Fields[fieldIndex].Selected)
                                        @Html.HiddenFor(m => m.Entries[entryIndex].Fields[fieldIndex].Field)
                                        <label class="forcheckbox" for="@Html.FieldIdFor(m => m.Entries[entryIndex].Fields[fieldIndex].Selected)">@Model.Entries[entryIndex].Fields[fieldIndex].Field</label>
                                    </li>
                                    fieldIndex++;
                                }
                            </ul>
                        }
                    </li>
                    entryIndex++;
                }
            </ul>
            @Html.Hint(T("Check any property which should be used for search queries."))

        }

        else {
            @Html.Hint(T("There is currently no index to search from. Please update you index, and check some indexable content exists."))
        }
    </div>
    <div>
        <label>@T("Localization")</label>
        @Html.EditorFor(m => m.FilterCulture)
        <label class="forcheckbox" for="@Html.FieldIdFor(m => m.FilterCulture)">@T("Narrow search to current culture only")</label>
        @Html.Hint(T("If checked, search results will only include content items localized in the current culture of the request."))
    </div>

</fieldset>

@using (Script.Foot()) {
<script type="text/javascript">
    //<![CDATA[
    (function ($) {

        $('li[data-index]').hide();
        $("li[data-index='@Model.SelectedIndex']").show();
        $('#selectIndex').change(function () {
            $('li[data-index]').hide();
            $("li[data-index='" + $(this).val() + "']").show();
        });

    })(jQuery);
//]]>
</script>
}